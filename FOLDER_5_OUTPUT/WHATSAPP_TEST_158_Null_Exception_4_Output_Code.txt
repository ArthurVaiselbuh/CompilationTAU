.data
string_access_violation: .asciiz "Access Violation"
string_illegal_div_by_0: .asciiz "Division By Zero"
string_invalid_ptr_dref: .asciiz "Invalid Pointer Dereference"
Label_0_StringLiteral: .asciiz "Forward"
Label_3_StringLiteral: .asciiz "Walking"
Label_8_StringLiteral: .asciiz "x"
Label_9_StringLiteral: .asciiz "walk"
Label_10_StringLiteral: .asciiz "walk"
Label_13_StringLiteral: .asciiz "init"
Label_16_StringLiteral: .asciiz "main"
.align 2
Leg_funcTable: .space 4
.align 2
Spider_funcTable: .space 8
.text
main:
	la $t0, Leg_funcTable
	la $t1, Label_1_Func_walk_Leg
	addi $t0, $t0, 0
	sw $t1, ($t0)
	la $t0, Spider_funcTable
	la $t1, Label_4_Func_walk_Spider
	addi $t0, $t0, 0
	sw $t1, ($t0)
	la $t0, Spider_funcTable
	la $t1, Label_6_Func_init_Spider
	addi $t0, $t0, 4
	sw $t1, ($t0)
	j __main__
	# Begin error handlers:
access_violation:
	li $v0, 4
	la $a0, string_access_violation
	syscall
	li $v0,10
	syscall
invalid_pointer:
	li $v0, 4
	la $a0, string_invalid_ptr_dref
	syscall
	li $v0,10
	syscall
	la $t0, Label_0_StringLiteral
Label_1_Func_walk_Leg:
	la $t0, Label_9_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, 0
Label_18_prolog_end_walk_Leg:
	# func prolog end
	la $t1, Label_3_StringLiteral
	beq $a1,$zero,invalid_pointer
	lw $t2, 4($a1)
	li $t0,1
	move $t4,$t1
Label_19_Length_String:
	lb $t3, 0($t4)
	addi $t0, $t0, 1
	addi $t4, $t4, 1
	bnez $t3, Label_19_Length_String
	addi $t0, $t0, -1
	move $t4,$t2
Label_20_Length_String:
	lb $t3, 0($t4)
	addi $t0, $t0, 1
	addi $t4, $t4, 1
	bnez $t3, Label_20_Length_String
	addi $t0, $t0, -1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	addi $a0, $t0, 0
	li $v0, 9
	syscall
	addi $t0, $v0, 0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	move $t5,$t0
	move $t4,$t1
Label_21_Concat_String1:
	lb $t3, 0($t4)
	sb $t3, 0($t5)
	addi $t4, $t4, 1
	addi $t5, $t5, 1
	bnez $t3, Label_21_Concat_String1
	addi $t5, $t5, -1
	move $t4,$t2
Label_22_Concat_String1:
	lb $t3, 0($t4)
	sb $t3, 0($t5)
	addi $t4, $t4, 1
	addi $t5, $t5, 1
	bnez $t3, Label_22_Concat_String1
	addi $t5, $t5, -1
	move $v0, $t0
	j Label_2_Func_walk_Leg_end
Label_2_Func_walk_Leg_end:
	addi $sp, $sp, 4
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
Label_4_Func_walk_Spider:
	la $t0, Label_10_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, -8
Label_23_prolog_end_walk_Spider:
	# func prolog end
	li $t1,8
	# Begin array allocation
	addi $t0,$t1,1
	li $t2,4
	mult $t0,$t2
	mflo $t0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	addi $a0, $t0, 0
	li $v0, 9
	syscall
	addi $t0, $v0, 0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	sw $t1, 0($t0)
	# end array allocation
	beq $a1,$zero,invalid_pointer
	sw $t0, 4($a1)
	la $t0, Label_8_StringLiteral
	sw $t0, -8($fp)
	li $t0,0
	sw $t0, -12($fp)
Label_12_while_statement_start:
	lw $t0, -12($fp)
	li $t1,8
	blt $t0,$t1,Label_25_AssignOne
	bge $t0,$t1,Label_26_AssignZero
Label_25_AssignOne:
	li $t0, 1
	j Label_24_end
Label_26_AssignZero:
	li $t0, 0
Label_24_end:
	beq $t0,$zero,Label_11_while_statement_end
	lw $t1, -8($fp)
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, 0
	move $a2, $sp
	beq $a1,$zero,invalid_pointer
	lw $t2, 4($a1)
	lw $t0, -12($fp)
	beq $t2,$zero,invalid_pointer
	lw $t3, 0($t2)
	bge $t0,$t3,access_violation
	blt $t0,$zero,access_violation
	addi $t3,$t0,1
	li $t0,4
	mult $t3,$t0
	mflo $t3
	add $t3,$t2,$t3
	lw $t0, 0($t3)
	move $a1,$t0
	beq $a1,$zero,invalid_pointer
	lw $t2, 0($a1)
	addi $t2,$t2,0
	lw $t0, 0($t2)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	move $a0,$a2
	jalr $t0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	# Deallocating stack for arguments
	addi $sp, $sp, 0
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t2, $v0
	li $t0,1
	move $t4,$t1
Label_27_Length_String:
	lb $t3, 0($t4)
	addi $t0, $t0, 1
	addi $t4, $t4, 1
	bnez $t3, Label_27_Length_String
	addi $t0, $t0, -1
	move $t4,$t2
Label_28_Length_String:
	lb $t3, 0($t4)
	addi $t0, $t0, 1
	addi $t4, $t4, 1
	bnez $t3, Label_28_Length_String
	addi $t0, $t0, -1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	addi $a0, $t0, 0
	li $v0, 9
	syscall
	addi $t0, $v0, 0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	move $t5,$t0
	move $t4,$t1
Label_29_Concat_String1:
	lb $t3, 0($t4)
	sb $t3, 0($t5)
	addi $t4, $t4, 1
	addi $t5, $t5, 1
	bnez $t3, Label_29_Concat_String1
	addi $t5, $t5, -1
	move $t4,$t2
Label_30_Concat_String1:
	lb $t3, 0($t4)
	sb $t3, 0($t5)
	addi $t4, $t4, 1
	addi $t5, $t5, 1
	bnez $t3, Label_30_Concat_String1
	addi $t5, $t5, -1
	sw $t0, -8($fp)
	lw $t1, -12($fp)
	li $t2,1
	add $t0,$t1,$t2
	li $t1,32767
	li $t2,-32768
	blt $t1,$t0,Label_32_overflow_max
	bgt $t2,$t0,Label_33_overflow_min
	j Label_31_end
Label_32_overflow_max:
	li $t0,32767
	j Label_31_end
Label_33_overflow_min:
	li $t0,-32768
Label_31_end:
	sw $t0, -12($fp)
	j Label_12_while_statement_start
Label_11_while_statement_end:
	lw $t0, -8($fp)
	move $v0, $t0
	j Label_5_Func_walk_Spider_end
Label_5_Func_walk_Spider_end:
	addi $sp, $sp, 12
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
Label_6_Func_init_Spider:
	la $t0, Label_13_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, -4
Label_34_prolog_end_init_Spider:
	# func prolog end
	li $t0,0
	sw $t0, -8($fp)
Label_15_while_statement_start:
	lw $t0, -8($fp)
	li $t1,8
	blt $t0,$t1,Label_36_AssignOne
	bge $t0,$t1,Label_37_AssignZero
Label_36_AssignOne:
	li $t0, 1
	j Label_35_end
Label_37_AssignZero:
	li $t0, 0
Label_35_end:
	beq $t0,$zero,Label_14_while_statement_end
	beq $a1,$zero,invalid_pointer
	lw $t0, 4($a1)
	lw $t1, -8($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	li $v0,9
	li $a0 ,8
	syscall
	move $t3,$v0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	addi $t2,$t3,0
	la $t4, Leg_funcTable
	sw $t4, 0($t3)
	la $t4, Label_0_StringLiteral
	addi $t3,$t3,4
	sw $t4, 0($t3)
	lw $t3, 0($t0)
	bge $t1,$t3,access_violation
	blt $t1,$zero,access_violation
	addi $t3,$t1,1
	li $t1,4
	mult $t3,$t1
	mflo $t3
	add $t3,$t0,$t3
	sw $t2, 0($t3)
	lw $t1, -8($fp)
	li $t2,1
	add $t0,$t1,$t2
	li $t1,32767
	li $t2,-32768
	blt $t1,$t0,Label_39_overflow_max
	bgt $t2,$t0,Label_40_overflow_min
	j Label_38_end
Label_39_overflow_max:
	li $t0,32767
	j Label_38_end
Label_40_overflow_min:
	li $t0,-32768
Label_38_end:
	sw $t0, -8($fp)
	j Label_15_while_statement_start
Label_14_while_statement_end:
Label_7_Func_init_Spider_end:
	addi $sp, $sp, 8
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
__main__:
	la $t0, Label_16_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sub $fp, $fp, $fp
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, -4
Label_41_prolog_end_main:
	# func prolog end
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	li $v0,9
	li $a0 ,8
	syscall
	move $t1,$v0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	addi $t0,$t1,0
	la $t2, Spider_funcTable
	sw $t2, 0($t1)
	addi $t2, $zero, 0
	addi $t1,$t1,4
	sw $t2, 0($t1)
	sw $t0, -8($fp)
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, 0
	move $a2, $sp
	lw $t0, -8($fp)
	move $a1,$t0
	beq $a1,$zero,invalid_pointer
	lw $t1, 0($a1)
	addi $t1,$t1,0
	lw $t0, 0($t1)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	move $a0,$a2
	jalr $t0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	# Deallocating stack for arguments
	addi $sp, $sp, 0
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $a0,$t0,0
	li $v0,4
	syscall
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
Label_17_Func_main_end:
	addi $sp, $sp, 8
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	li $v0,10
	syscall

.data
string_access_violation: .asciiz "Access Violation"
string_illegal_div_by_0: .asciiz "Division By Zero"
string_invalid_ptr_dref: .asciiz "Invalid Pointer Dereference"
Label_0_StringLiteral: .asciiz "main"
.align 2
A_funcTable: .space 0
.align 2
B_funcTable: .space 0
.align 2
C_funcTable: .space 0
.align 2
D_funcTable: .space 0
.text
main:
	j __main__
	# Begin error handlers:
access_violation:
	li $v0, 4
	la $a0, string_access_violation
	syscall
	li $v0,10
	syscall
invalid_pointer:
	li $v0, 4
	la $a0, string_invalid_ptr_dref
	syscall
	li $v0,10
	syscall
__main__:
	la $t0, Label_0_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sub $fp, $fp, $fp
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, -8
Label_2_prolog_end_main:
	# func prolog end
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	li $v0,9
	li $a0 ,20
	syscall
	move $t1,$v0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	addi $t0,$t1,0
	la $t2, D_funcTable
	sw $t2, 0($t1)
	li $t2,0
	addi $t1,$t1,4
	sw $t2, 0($t1)
	li $t2,0
	addi $t1,$t1,4
	sw $t2, 0($t1)
	li $t2,0
	addi $t1,$t1,4
	sw $t2, 0($t1)
	li $t2,0
	addi $t1,$t1,4
	sw $t2, 0($t1)
	sw $t0, -8($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	li $v0,9
	li $a0 ,20
	syscall
	move $t1,$v0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	addi $t0,$t1,0
	la $t2, D_funcTable
	sw $t2, 0($t1)
	li $t2,0
	addi $t1,$t1,4
	sw $t2, 0($t1)
	li $t2,0
	addi $t1,$t1,4
	sw $t2, 0($t1)
	li $t2,0
	addi $t1,$t1,4
	sw $t2, 0($t1)
	li $t2,0
	addi $t1,$t1,4
	sw $t2, 0($t1)
	sw $t0, -12($fp)
	lw $t0, -8($fp)
	li $t1,1
	beq $t0,$zero,invalid_pointer
	sw $t1, 4($t0)
	lw $t0, -12($fp)
	li $t1,2
	beq $t0,$zero,invalid_pointer
	sw $t1, 4($t0)
	lw $t0, -12($fp)
	li $t1,3
	beq $t0,$zero,invalid_pointer
	sw $t1, 8($t0)
	lw $t0, -12($fp)
	li $t1,4
	beq $t0,$zero,invalid_pointer
	sw $t1, 12($t0)
	lw $t0, -12($fp)
	li $t1,5
	beq $t0,$zero,invalid_pointer
	sw $t1, 16($t0)
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	lw $t0, -8($fp)
	beq $t0,$zero,invalid_pointer
	lw $t1, 4($t0)
	move $a0,$t1
	li $v0,1
	syscall
	li $a0,32
	li $v0,11
	syscall
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	lw $t0, -12($fp)
	beq $t0,$zero,invalid_pointer
	lw $t1, 4($t0)
	lw $t0, -12($fp)
	beq $t0,$zero,invalid_pointer
	lw $t2, 8($t0)
	add $t0,$t1,$t2
	li $t1,32767
	li $t2,-32768
	blt $t1,$t0,Label_4_overflow_max
	bgt $t2,$t0,Label_5_overflow_min
	j Label_3_end
Label_4_overflow_max:
	li $t0,32767
	j Label_3_end
Label_5_overflow_min:
	li $t0,-32768
Label_3_end:
	lw $t1, -12($fp)
	beq $t1,$zero,invalid_pointer
	lw $t2, 12($t1)
	add $t1,$t0,$t2
	li $t0,32767
	li $t2,-32768
	blt $t0,$t1,Label_7_overflow_max
	bgt $t2,$t1,Label_8_overflow_min
	j Label_6_end
Label_7_overflow_max:
	li $t1,32767
	j Label_6_end
Label_8_overflow_min:
	li $t1,-32768
Label_6_end:
	lw $t0, -12($fp)
	beq $t0,$zero,invalid_pointer
	lw $t2, 16($t0)
	add $t0,$t1,$t2
	li $t1,32767
	li $t2,-32768
	blt $t1,$t0,Label_10_overflow_max
	bgt $t2,$t0,Label_11_overflow_min
	j Label_9_end
Label_10_overflow_max:
	li $t0,32767
	j Label_9_end
Label_11_overflow_min:
	li $t0,-32768
Label_9_end:
	move $a0,$t0
	li $v0,1
	syscall
	li $a0,32
	li $v0,11
	syscall
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
Label_1_Func_main_end:
	addi $sp, $sp, 12
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	li $v0,10
	syscall

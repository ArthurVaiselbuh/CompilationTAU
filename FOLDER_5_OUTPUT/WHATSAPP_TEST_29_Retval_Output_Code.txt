.data
string_access_violation: .asciiz "Access Violation"
string_illegal_div_by_0: .asciiz "Division By Zero"
string_invalid_ptr_dref: .asciiz "Invalid Pointer Dereference"
Label_8_StringLiteral: .asciiz "bar"
Label_9_StringLiteral: .asciiz "foo"
Label_10_StringLiteral: .asciiz "foo"
Label_11_StringLiteral: .asciiz "bar"
Label_12_StringLiteral: .asciiz "main"
.align 2
test_funcTable: .space 8
.text
main:
	la $t0, test_funcTable
	la $t1, Label_4_Func_foo_test
	addi $t0, $t0, 0
	sw $t1, ($t0)
	la $t0, test_funcTable
	la $t1, Label_6_Func_bar_test
	addi $t0, $t0, 4
	sw $t1, ($t0)
	j __main__
	# Begin error handlers:
access_violation:
	li $v0, 4
	la $a0, string_access_violation
	syscall
	li $v0,10
	syscall
invalid_pointer:
	li $v0, 4
	la $a0, string_invalid_ptr_dref
	syscall
	li $v0,10
	syscall
Label_0_Func_bar:
	la $t0, Label_8_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, 0
Label_14_prolog_end_bar:
	# func prolog end
	li $t0,1
	move $v0, $t0
	j Label_1_Func_bar_end
Label_1_Func_bar_end:
	addi $sp, $sp, 4
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
Label_2_Func_foo:
	la $t0, Label_9_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, 0
Label_15_prolog_end_foo:
	# func prolog end
	li $t0,2
	move $v0, $t0
	j Label_3_Func_foo_end
Label_3_Func_foo_end:
	addi $sp, $sp, 4
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
Label_4_Func_foo_test:
	la $t0, Label_10_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, 0
Label_16_prolog_end_foo_test:
	# func prolog end
	li $t0,3
	move $v0, $t0
	j Label_5_Func_foo_test_end
Label_5_Func_foo_test_end:
	addi $sp, $sp, 4
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
Label_6_Func_bar_test:
	la $t0, Label_11_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, 0
Label_17_prolog_end_bar_test:
	# func prolog end
	li $t0,4
	move $v0, $t0
	j Label_7_Func_bar_test_end
Label_7_Func_bar_test_end:
	addi $sp, $sp, 4
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
__main__:
	la $t0, Label_12_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sub $fp, $fp, $fp
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, -4
Label_18_prolog_end_main:
	# func prolog end
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	li $v0,9
	li $a0 ,4
	syscall
	move $t1,$v0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	addi $t0,$t1,0
	la $t2, test_funcTable
	sw $t2, 0($t1)
	sw $t0, -8($fp)
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, 0
	move $a2, $sp
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	move $a0,$a2
	jal Label_2_Func_foo
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	# Deallocating stack for arguments
	addi $sp, $sp, 0
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t1, $v0
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, 0
	move $a2, $sp
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	move $a0,$a2
	jal Label_0_Func_bar
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	# Deallocating stack for arguments
	addi $sp, $sp, 0
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t2, $v0
	add $t0,$t1,$t2
	li $t1,32767
	li $t2,-32768
	blt $t1,$t0,Label_20_overflow_max
	bgt $t2,$t0,Label_21_overflow_min
	j Label_19_end
Label_20_overflow_max:
	li $t0,32767
	j Label_19_end
Label_21_overflow_min:
	li $t0,-32768
Label_19_end:
	move $a0,$t0
	li $v0,1
	syscall
	li $a0,32
	li $v0,11
	syscall
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, 0
	move $a2, $sp
	lw $t0, -8($fp)
	move $a1,$t0
	beq $a1,$zero,invalid_pointer
	lw $t1, 0($a1)
	addi $t1,$t1,0
	lw $t0, 0($t1)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	move $a0,$a2
	jalr $t0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	# Deallocating stack for arguments
	addi $sp, $sp, 0
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t1, $v0
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, 0
	move $a2, $sp
	lw $t0, -8($fp)
	move $a1,$t0
	beq $a1,$zero,invalid_pointer
	lw $t2, 0($a1)
	addi $t2,$t2,4
	lw $t0, 0($t2)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	move $a0,$a2
	jalr $t0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	# Deallocating stack for arguments
	addi $sp, $sp, 0
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t2, $v0
	add $t0,$t1,$t2
	li $t1,32767
	li $t2,-32768
	blt $t1,$t0,Label_23_overflow_max
	bgt $t2,$t0,Label_24_overflow_min
	j Label_22_end
Label_23_overflow_max:
	li $t0,32767
	j Label_22_end
Label_24_overflow_min:
	li $t0,-32768
Label_22_end:
	move $a0,$t0
	li $v0,1
	syscall
	li $a0,32
	li $v0,11
	syscall
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
Label_13_Func_main_end:
	addi $sp, $sp, 8
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	li $v0,10
	syscall

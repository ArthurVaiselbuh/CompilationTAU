.data
string_access_violation: .asciiz "Access Violation"
string_illegal_div_by_0: .asciiz "Division By Zero"
string_invalid_ptr_dref: .asciiz "Invalid Pointer Dereference"
Label_0_StringLiteral: .asciiz "main"
.text
main:
	j __main__
	# Begin error handlers:
access_violation:
	li $v0, 4
	la $a0, string_access_violation
	syscall
	li $v0,10
	syscall
invalid_pointer:
	li $v0, 4
	la $a0, string_invalid_ptr_dref
	syscall
	li $v0,10
	syscall
__main__:
	la $t0, Label_0_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sub $fp, $fp, $fp
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, 0
Label_2_prolog_end_main:
	# func prolog end
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	li $t1,1
	li $t0,2
	li $t2,3
	mult $t0,$t2
	mflo $t2
	li $t0,32767
	li $t3,-32768
	blt $t0,$t2,Label_4_overflow_max
	bgt $t3,$t2,Label_5_overflow_min
	j Label_3_end
Label_4_overflow_max:
	li $t2,32767
	j Label_3_end
Label_5_overflow_min:
	li $t2,-32768
Label_3_end:
	add $t0,$t1,$t2
	li $t1,32767
	li $t2,-32768
	blt $t1,$t0,Label_7_overflow_max
	bgt $t2,$t0,Label_8_overflow_min
	j Label_6_end
Label_7_overflow_max:
	li $t0,32767
	j Label_6_end
Label_8_overflow_min:
	li $t0,-32768
Label_6_end:
	move $a0,$t0
	li $v0,1
	syscall
	li $a0,32
	li $v0,11
	syscall
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	li $t0,3
	li $t1,1
	mult $t0,$t1
	mflo $t1
	li $t0,32767
	li $t2,-32768
	blt $t0,$t1,Label_10_overflow_max
	bgt $t2,$t1,Label_11_overflow_min
	j Label_9_end
Label_10_overflow_max:
	li $t1,32767
	j Label_9_end
Label_11_overflow_min:
	li $t1,-32768
Label_9_end:
	li $t2,1
	add $t0,$t1,$t2
	li $t1,32767
	li $t2,-32768
	blt $t1,$t0,Label_13_overflow_max
	bgt $t2,$t0,Label_14_overflow_min
	j Label_12_end
Label_13_overflow_max:
	li $t0,32767
	j Label_12_end
Label_14_overflow_min:
	li $t0,-32768
Label_12_end:
	move $a0,$t0
	li $v0,1
	syscall
	li $a0,32
	li $v0,11
	syscall
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	li $t0,3
	li $t1,2
	mult $t0,$t1
	mflo $t1
	li $t0,32767
	li $t2,-32768
	blt $t0,$t1,Label_16_overflow_max
	bgt $t2,$t1,Label_17_overflow_min
	j Label_15_end
Label_16_overflow_max:
	li $t1,32767
	j Label_15_end
Label_17_overflow_min:
	li $t1,-32768
Label_15_end:
	li $t2,6
	bnez $t2,Label_21_div_by_zero_not
	li $v0, 4
	la $a0, string_illegal_div_by_0
	syscall
	li $v0,10
	syscall
Label_21_div_by_zero_not:
	div $t0,$t1,$t2
	mflo $t0
	li $t1,32767
	li $t2,-32768
	blt $t1,$t0,Label_19_overflow_max
	bgt $t2,$t0,Label_20_overflow_min
	j Label_18_end
Label_19_overflow_max:
	li $t0,32767
	j Label_18_end
Label_20_overflow_min:
	li $t0,-32768
Label_18_end:
	move $a0,$t0
	li $v0,1
	syscall
	li $a0,32
	li $v0,11
	syscall
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	li $t1,6
	li $t2,6
	bnez $t2,Label_25_div_by_zero_not
	li $v0, 4
	la $a0, string_illegal_div_by_0
	syscall
	li $v0,10
	syscall
Label_25_div_by_zero_not:
	div $t0,$t1,$t2
	mflo $t0
	li $t1,32767
	li $t2,-32768
	blt $t1,$t0,Label_23_overflow_max
	bgt $t2,$t0,Label_24_overflow_min
	j Label_22_end
Label_23_overflow_max:
	li $t0,32767
	j Label_22_end
Label_24_overflow_min:
	li $t0,-32768
Label_22_end:
	li $t1,3
	mult $t0,$t1
	mflo $t0
	li $t1,32767
	li $t2,-32768
	blt $t1,$t0,Label_27_overflow_max
	bgt $t2,$t0,Label_28_overflow_min
	j Label_26_end
Label_27_overflow_max:
	li $t0,32767
	j Label_26_end
Label_28_overflow_min:
	li $t0,-32768
Label_26_end:
	move $a0,$t0
	li $v0,1
	syscall
	li $a0,32
	li $v0,11
	syscall
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	li $t0,3
	li $t2,2
	sub $t1,$t0,$t2
	li $t0,32767
	li $t2,-32768
	blt $t0,$t1,Label_30_overflow_max
	bgt $t2,$t1,Label_31_overflow_min
	j Label_29_end
Label_30_overflow_max:
	li $t1,32767
	j Label_29_end
Label_31_overflow_min:
	li $t1,-32768
Label_29_end:
	li $t2,2
	sub $t0,$t1,$t2
	li $t1,32767
	li $t2,-32768
	blt $t1,$t0,Label_33_overflow_max
	bgt $t2,$t0,Label_34_overflow_min
	j Label_32_end
Label_33_overflow_max:
	li $t0,32767
	j Label_32_end
Label_34_overflow_min:
	li $t0,-32768
Label_32_end:
	move $a0,$t0
	li $v0,1
	syscall
	li $a0,32
	li $v0,11
	syscall
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
Label_1_Func_main_end:
	addi $sp, $sp, 4
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	li $v0,10
	syscall

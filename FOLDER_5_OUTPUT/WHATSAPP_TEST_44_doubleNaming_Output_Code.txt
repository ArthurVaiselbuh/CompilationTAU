.data
string_access_violation: .asciiz "Access Violation"
string_illegal_div_by_0: .asciiz "Division By Zero"
string_invalid_ptr_dref: .asciiz "Invalid Pointer Dereference"
Label_6_StringLiteral: .asciiz "init"
Label_7_StringLiteral: .asciiz "update"
Label_8_StringLiteral: .asciiz "print"
Label_9_StringLiteral: .asciiz "main"
.align 2
A_funcTable: .space 0
.align 2
B_funcTable: .space 12
.text
main:
	la $t0, B_funcTable
	la $t1, Label_0_Func_init_B
	addi $t0, $t0, 0
	sw $t1, ($t0)
	la $t0, B_funcTable
	la $t1, Label_2_Func_update_B
	addi $t0, $t0, 4
	sw $t1, ($t0)
	la $t0, B_funcTable
	la $t1, Label_4_Func_print_B
	addi $t0, $t0, 8
	sw $t1, ($t0)
	j __main__
	# Begin error handlers:
access_violation:
	li $v0, 4
	la $a0, string_access_violation
	syscall
	li $v0,10
	syscall
invalid_pointer:
	li $v0, 4
	la $a0, string_invalid_ptr_dref
	syscall
	li $v0,10
	syscall
Label_0_Func_init_B:
	la $t0, Label_6_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, 0
Label_11_prolog_end_init_B:
	# func prolog end
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	li $v0,9
	li $a0 ,8
	syscall
	move $t1,$v0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	addi $t0,$t1,0
	la $t2, A_funcTable
	sw $t2, 0($t1)
	li $t2,0
	addi $t1,$t1,4
	sw $t2, 0($t1)
	beq $a1,$zero,invalid_pointer
	sw $t0, 4($a1)
	beq $a1,$zero,invalid_pointer
	lw $t0, 4($a1)
	li $t1,17
	beq $t0,$zero,invalid_pointer
	sw $t1, 4($t0)
Label_1_Func_init_B_end:
	addi $sp, $sp, 4
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
Label_2_Func_update_B:
	la $t0, Label_7_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, 0
Label_12_prolog_end_update_B:
	# func prolog end
	beq $a1,$zero,invalid_pointer
	lw $t0, 4($a1)
	lw $t1, 0($a0)
	beq $t0,$zero,invalid_pointer
	sw $t1, 4($t0)
Label_3_Func_update_B_end:
	addi $sp, $sp, 4
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
Label_4_Func_print_B:
	la $t0, Label_8_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, 0
Label_13_prolog_end_print_B:
	# func prolog end
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	beq $a1,$zero,invalid_pointer
	lw $t0, 4($a1)
	beq $t0,$zero,invalid_pointer
	lw $t1, 4($t0)
	move $a0,$t1
	li $v0,1
	syscall
	li $a0,32
	li $v0,11
	syscall
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
Label_5_Func_print_B_end:
	addi $sp, $sp, 4
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
__main__:
	la $t0, Label_9_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sub $fp, $fp, $fp
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, -4
Label_14_prolog_end_main:
	# func prolog end
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	li $v0,9
	li $a0 ,8
	syscall
	move $t1,$v0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	addi $t0,$t1,0
	la $t2, B_funcTable
	sw $t2, 0($t1)
	addi $t2, $zero, 0
	addi $t1,$t1,4
	sw $t2, 0($t1)
	sw $t0, -8($fp)
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, 0
	move $a2, $sp
	lw $t0, -8($fp)
	move $a1,$t0
	beq $a1,$zero,invalid_pointer
	lw $t1, 0($a1)
	addi $t1,$t1,0
	lw $t0, 0($t1)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	move $a0,$a2
	jalr $t0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	# Deallocating stack for arguments
	addi $sp, $sp, 0
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	lw $t0, -8($fp)
	move $a1,$t0
	addi $sp, $sp, -4
	sw $a2, 0($sp)
	li $t0,22
	lw $a2, 0($sp)
	addi $sp, $sp, 4
	sw $t0, 0($a2)
	beq $a1,$zero,invalid_pointer
	lw $t1, 0($a1)
	addi $t1,$t1,4
	lw $t0, 0($t1)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	move $a0,$a2
	jalr $t0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, 0
	move $a2, $sp
	lw $t0, -8($fp)
	move $a1,$t0
	beq $a1,$zero,invalid_pointer
	lw $t1, 0($a1)
	addi $t1,$t1,8
	lw $t0, 0($t1)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	move $a0,$a2
	jalr $t0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	# Deallocating stack for arguments
	addi $sp, $sp, 0
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
Label_10_Func_main_end:
	addi $sp, $sp, 8
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	li $v0,10
	syscall

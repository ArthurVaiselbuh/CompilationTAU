.data
string_access_violation: .asciiz "Access Violation"
string_illegal_div_by_0: .asciiz "Division By Zero"
string_invalid_ptr_dref: .asciiz "Invalid Pointer Dereference"
Label_0_StringLiteral: .asciiz "nothing"
Label_1_StringLiteral: .asciiz "NOWPLAYING"
Label_6_StringLiteral: .asciiz "nothing"
Label_9_StringLiteral: .asciiz "LucyInTheSkyWithDiamonds"
Label_12_StringLiteral: .asciiz "IsThisTheRealLifeIsItJustFantasy"
Label_15_StringLiteral: .asciiz "getIntro"
Label_16_StringLiteral: .asciiz "stop"
Label_17_StringLiteral: .asciiz "play"
Label_18_StringLiteral: .asciiz "play"
Label_19_StringLiteral: .asciiz "whatsPlaying"
Label_20_StringLiteral: .asciiz "main"
global_nowplaying: .word 0
.align 2
Music_funcTable: .space 8
.align 2
Beatles_funcTable: .space 12
.align 2
Queen_funcTable: .space 12
.text
main:
	la $t0, Music_funcTable
	la $t1, Label_2_Func_getIntro_Music
	addi $t0, $t0, 0
	sw $t1, ($t0)
	la $t0, Music_funcTable
	la $t1, Label_4_Func_stop_Music
	addi $t0, $t0, 4
	sw $t1, ($t0)
	la $t0, Beatles_funcTable
	la $t1, Label_2_Func_getIntro_Music
	addi $t0, $t0, 0
	sw $t1, ($t0)
	la $t0, Beatles_funcTable
	la $t1, Label_4_Func_stop_Music
	addi $t0, $t0, 4
	sw $t1, ($t0)
	la $t0, Beatles_funcTable
	la $t1, Label_7_Func_play_Beatles
	addi $t0, $t0, 8
	sw $t1, ($t0)
	la $t0, Queen_funcTable
	la $t1, Label_2_Func_getIntro_Music
	addi $t0, $t0, 0
	sw $t1, ($t0)
	la $t0, Queen_funcTable
	la $t1, Label_4_Func_stop_Music
	addi $t0, $t0, 4
	sw $t1, ($t0)
	la $t0, Queen_funcTable
	la $t1, Label_10_Func_play_Queen
	addi $t0, $t0, 8
	sw $t1, ($t0)
	la $t0, Label_0_StringLiteral
	la $t1, global_nowplaying
	sw $t0, 0($t1)
	j __main__
	# Begin error handlers:
access_violation:
	li $v0, 4
	la $a0, string_access_violation
	syscall
	li $v0,10
	syscall
invalid_pointer:
	li $v0, 4
	la $a0, string_invalid_ptr_dref
	syscall
	li $v0,10
	syscall
	la $t0, Label_1_StringLiteral
Label_2_Func_getIntro_Music:
	la $t0, Label_15_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, 0
Label_22_prolog_end_getIntro_Music:
	# func prolog end
	beq $a1,$zero,invalid_pointer
	lw $t0, 4($a1)
	move $v0, $t0
	j Label_3_Func_getIntro_Music_end
Label_3_Func_getIntro_Music_end:
	addi $sp, $sp, 4
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
Label_4_Func_stop_Music:
	la $t0, Label_16_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, 0
Label_23_prolog_end_stop_Music:
	# func prolog end
	la $t0, Label_6_StringLiteral
	la $t1, global_nowplaying
	sw $t0, 0($t1)
Label_5_Func_stop_Music_end:
	addi $sp, $sp, 4
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
Label_7_Func_play_Beatles:
	la $t0, Label_17_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, 0
Label_24_prolog_end_play_Beatles:
	# func prolog end
	la $t0, Label_9_StringLiteral
	la $t1, global_nowplaying
	sw $t0, 0($t1)
Label_8_Func_play_Beatles_end:
	addi $sp, $sp, 4
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
Label_10_Func_play_Queen:
	la $t0, Label_18_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, 0
Label_25_prolog_end_play_Queen:
	# func prolog end
	la $t0, Label_12_StringLiteral
	la $t1, global_nowplaying
	sw $t0, 0($t1)
Label_11_Func_play_Queen_end:
	addi $sp, $sp, 4
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
Label_13_Func_whatsPlaying:
	la $t0, Label_19_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, 0
Label_26_prolog_end_whatsPlaying:
	# func prolog end
	lw $t0, 0($a0)
	beq $t0,$zero,invalid_pointer
	lw $t1, 4($t0)
	la $t2, global_nowplaying
	lw $t2,0($t2)
	li $t0,1
	move $t4,$t1
Label_27_Length_String:
	lb $t3, 0($t4)
	addi $t0, $t0, 1
	addi $t4, $t4, 1
	bnez $t3, Label_27_Length_String
	addi $t0, $t0, -1
	move $t4,$t2
Label_28_Length_String:
	lb $t3, 0($t4)
	addi $t0, $t0, 1
	addi $t4, $t4, 1
	bnez $t3, Label_28_Length_String
	addi $t0, $t0, -1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	addi $a0, $t0, 0
	li $v0, 9
	syscall
	addi $t0, $v0, 0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	move $t5,$t0
	move $t4,$t1
Label_29_Concat_String1:
	lb $t3, 0($t4)
	sb $t3, 0($t5)
	addi $t4, $t4, 1
	addi $t5, $t5, 1
	bnez $t3, Label_29_Concat_String1
	addi $t5, $t5, -1
	move $t4,$t2
Label_30_Concat_String1:
	lb $t3, 0($t4)
	sb $t3, 0($t5)
	addi $t4, $t4, 1
	addi $t5, $t5, 1
	bnez $t3, Label_30_Concat_String1
	addi $t5, $t5, -1
	move $v0, $t0
	j Label_14_Func_whatsPlaying_end
Label_14_Func_whatsPlaying_end:
	addi $sp, $sp, 4
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
__main__:
	la $t0, Label_20_StringLiteral
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	sub $fp, $fp, $fp
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, -8
Label_31_prolog_end_main:
	# func prolog end
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	li $v0,9
	li $a0 ,8
	syscall
	move $t1,$v0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	addi $t0,$t1,0
	la $t2, Beatles_funcTable
	sw $t2, 0($t1)
	la $t2, Label_1_StringLiteral
	addi $t1,$t1,4
	sw $t2, 0($t1)
	sw $t0, -8($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	li $v0,9
	li $a0 ,8
	syscall
	move $t1,$v0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	addi $t0,$t1,0
	la $t2, Queen_funcTable
	sw $t2, 0($t1)
	la $t2, Label_1_StringLiteral
	addi $t1,$t1,4
	sw $t2, 0($t1)
	sw $t0, -12($fp)
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	addi $sp, $sp, -4
	sw $a2, 0($sp)
	lw $t0, -8($fp)
	lw $a2, 0($sp)
	addi $sp, $sp, 4
	sw $t0, 0($a2)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	move $a0,$a2
	jal Label_13_Func_whatsPlaying
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $a0,$t0,0
	li $v0,4
	syscall
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, 0
	move $a2, $sp
	lw $t0, -8($fp)
	move $a1,$t0
	beq $a1,$zero,invalid_pointer
	lw $t1, 0($a1)
	addi $t1,$t1,8
	lw $t0, 0($t1)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	move $a0,$a2
	jalr $t0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	# Deallocating stack for arguments
	addi $sp, $sp, 0
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	addi $sp, $sp, -4
	sw $a2, 0($sp)
	lw $t0, -8($fp)
	lw $a2, 0($sp)
	addi $sp, $sp, 4
	sw $t0, 0($a2)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	move $a0,$a2
	jal Label_13_Func_whatsPlaying
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $a0,$t0,0
	li $v0,4
	syscall
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, 0
	move $a2, $sp
	lw $t0, -12($fp)
	move $a1,$t0
	beq $a1,$zero,invalid_pointer
	lw $t1, 0($a1)
	addi $t1,$t1,8
	lw $t0, 0($t1)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	move $a0,$a2
	jalr $t0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	# Deallocating stack for arguments
	addi $sp, $sp, 0
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	addi $sp, $sp, -4
	sw $a2, 0($sp)
	lw $t0, -12($fp)
	lw $a2, 0($sp)
	addi $sp, $sp, 4
	sw $t0, 0($a2)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	move $a0,$a2
	jal Label_13_Func_whatsPlaying
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $a0,$t0,0
	li $v0,4
	syscall
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, 0
	move $a2, $sp
	lw $t0, -12($fp)
	move $a1,$t0
	beq $a1,$zero,invalid_pointer
	lw $t1, 0($a1)
	addi $t1,$t1,4
	lw $t0, 0($t1)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	move $a0,$a2
	jalr $t0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	# Deallocating stack for arguments
	addi $sp, $sp, 0
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, 0
	move $a2, $sp
	lw $t0, -8($fp)
	move $a1,$t0
	beq $a1,$zero,invalid_pointer
	lw $t1, 0($a1)
	addi $t1,$t1,4
	lw $t0, 0($t1)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	move $a0,$a2
	jalr $t0
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	# Deallocating stack for arguments
	addi $sp, $sp, 0
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	addi $sp, $sp, -40
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	sw $a0, 32($sp)
	sw $a1, 36($sp)
	# Allocating stack for arguments
	addi $sp, $sp, -4
	move $a2, $sp
	addi $sp, $sp, -4
	sw $a2, 0($sp)
	lw $t0, -8($fp)
	lw $a2, 0($sp)
	addi $sp, $sp, 4
	sw $t0, 0($a2)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	move $a0,$a2
	jal Label_13_Func_whatsPlaying
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
	addi $a0,$t0,0
	li $v0,4
	syscall
	# Deallocating stack for arguments
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	lw $t3, 12($sp)
	lw $t4, 16($sp)
	lw $t5, 20($sp)
	lw $t6, 24($sp)
	lw $t7, 28($sp)
	lw $a0, 32($sp)
	lw $a1, 36($sp)
	addi $sp, $sp, 40
	move $t0, $v0
Label_21_Func_main_end:
	addi $sp, $sp, 12
	lw	$fp, ($sp)
	lw	$ra, 4($sp)
	addi $sp, $sp, 8
	li $v0,10
	syscall
